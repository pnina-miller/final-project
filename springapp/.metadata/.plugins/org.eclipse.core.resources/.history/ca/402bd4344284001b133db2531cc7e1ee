package com.wuwei.service;

import java.util.LinkedHashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;

import com.wuwei.dao.OptionsHibernet;
import com.wuwei.dao.UserHibernet;
import com.wuwei.dao.ValuesHibernet;
import com.wuwei.entity.Option;
import com.wuwei.entity.Result;
import com.wuwei.entity.User;
import com.wuwei.entity.Value;

@Service
public class ValuesHibernatService {

	@Resource(name = "ValuesHibernet")
	private ValuesHibernet ValuesHibernet;
	private OptionsHibernet optionsHibernet;
	private UserHibernet userHibernet;
	private static final Logger logger = Logger.getLogger(ValuesHibernatService.class.getName());

	public Result updateValues(Object value) {
		Result result = new Result();
		try {
			Value newValue=new Value("jjj",new Option("fff"),new User( "jj@h.com","hhh"));
			result.setStatus(ValuesHibernet.update(newValue));
		} catch (Exception e) {
			logger.log(Level.SEVERE, null, e);
		}
		return result;
	}

	public Result createValues(LinkedHashMap value) throws Exception {
		Result result = new Result();
			User user;
		Option option = null;
		try {
			if(value.get("userName")!=null)
				user=(User) userHibernet.getByName((String) value.get("userName"));
			else
				if(value.get("userId")!=null)
					user=(User) userHibernet.getById((Integer) value.get("userId"));
				else throw new Exception("user is required");
			
		if(value.get("optionName")!=null)
			user=(User) optionsHibernet.getByName((String) value.get("optionName"));
		else
			if(value.get("optionId")!=null)
				user=(User) optionsHibernet.getById((Integer) value.get("optionId"));
			else throw new Exception("option is required");
		Value newValue=new Value((String)value.get("valueName"),option, user);
		
			result.setStatus(ValuesHibernet.create(newValue));
		} catch (Exception e) {
			logger.log(Level.SEVERE, null, e);
		}
		return result;
	}

	public Result getValues(String name, String password) {
		Result result = new Result();
		System.out.println("values: " + name + " password: " + password);
		try {
			@SuppressWarnings("unchecked")
			List<Value> values = (List<Value>) ValuesHibernet.get(name);
			if (values == null)
				result.setStatus(0);
			else
				result.setStatus(1);
			result.setData(values);
		} catch (Exception e) {
			logger.log(Level.SEVERE, null, e);
		}
		return result;
	}

	public Result getValues() {
		Result result = new Result();
		try {
			List<Object> values = ValuesHibernet.getAll();
			result.setStatus(1);
			result.setData(values);
		} catch (Exception e) {
			logger.log(Level.SEVERE, null, e);
		}
		return result;
	}

	public Result deleteValues(String email, String password) {
		Result result = new Result();
		try {

			result.setStatus(ValuesHibernet.delete(email));
		} catch (Exception e) {
			logger.log(Level.SEVERE, null, e);
		}
		return result;
	}

	public Result CreateValue(Object value) {
//		User user=(User) userHibernet.getByName();
//		Option option=(Option) optionsHibernet.getByName("identityNum");
//		Value newValue=new Value("jjj",option, user);
		Result result = new Result();
//		try {
//			result.setStatus(ValuesHibernet.create(newValue));
//		} catch (Exception e) {
//			logger.log(Level.SEVERE, null, e);
//		}
		return result;
	}

	public Result getValuesByUser() {
		// TODO Auto-generated method stub
		return null;
	}

	public Result getAllValues() {
		// TODO Auto-generated method stub
		return null;
	}

}
